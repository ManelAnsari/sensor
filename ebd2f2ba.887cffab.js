/*! For license information please see ebd2f2ba.887cffab.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{116:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return d}));var n=a(1),r=a(6),c=(a(0),a(121)),o=a(127),s=a(128),l={id:"demo",title:"Farm Datalogger",sidebar_label:"Demo - Farm Datalogger"},i={id:"get-started/demo",title:"Farm Datalogger",description:"import Tabs from '@theme/Tabs';",source:"@site/docs/get-started/04-demo.md",permalink:"/shunyainterfaces/docs/get-started/demo",editUrl:"https://github.com/shunyaos/shunyainterfaces/edit/master/docs/website/docs/get-started/04-demo.md",sidebar_label:"Demo - Farm Datalogger",sidebar:"docs",previous:{title:"Installation",permalink:"/shunyainterfaces/docs/get-started/installation"},next:{title:"Introduction",permalink:"/shunyainterfaces/docs/build-solutions/01-intro"}},b=[{value:"Introduction",id:"introduction",children:[]},{value:"Ingredients for the Recipe",id:"ingredients-for-the-recipe",children:[]},{value:"Step 1: Hardware Setup",id:"step-1-hardware-setup",children:[]},{value:"Step 2: Lets code!",id:"step-2-lets-code",children:[{value:"Skeleton structure of Shunya Interfaces",id:"skeleton-structure-of-shunya-interfaces",children:[]},{value:"API for reading Temperature from the sensor is",id:"api-for-reading-temperature-from-the-sensor-is",children:[]},{value:"API for reading Pressure from the sensor is",id:"api-for-reading-pressure-from-the-sensor-is",children:[]},{value:"API for reading Soil moisture from the sensor is",id:"api-for-reading-soil-moisture-from-the-sensor-is",children:[]},{value:"Send the Data to Dashboard",id:"send-the-data-to-dashboard",children:[]}]},{value:"Step 3: Configure, Compile and Run",id:"step-3-configure-compile-and-run",children:[]}],u={rightToc:b};function d(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},u,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"introduction"},"Introduction"),Object(c.b)("p",null,"In this project we will be monitoring various environmental parameters\ncritical for crops and will store the data and create graphs with the\ndata getting logged."),Object(c.b)("p",null,Object(c.b)("img",Object(n.a)({parentName:"p"},{src:"../assets/demo.gif",alt:"flow-001"}))),Object(c.b)("h2",{id:"ingredients-for-the-recipe"},"Ingredients for the Recipe"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"Raspberry Pi 3/4 (or any variant of these)"),Object(c.b)("li",{parentName:"ol"},"SD card with Shunya OS installed, ",Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/shunyainterfaces/docs/get-started/installation"}),"instructions")),Object(c.b)("li",{parentName:"ol"},"Temperature, Pressure sensor - BME280  "),Object(c.b)("li",{parentName:"ol"},"Soil Moisture sensor "),Object(c.b)("li",{parentName:"ol"},"Analog to Digital Converter PCF8591 module"),Object(c.b)("li",{parentName:"ol"},"OLED Display (128x64) (optional)"),Object(c.b)("li",{parentName:"ol"},"Wire Cutter "),Object(c.b)("li",{parentName:"ol"},"Screwdriver "),Object(c.b)("li",{parentName:"ol"},"Micro SD card Reader"),Object(c.b)("li",{parentName:"ol"},"Female to Female Du-point cables  "),Object(c.b)("li",{parentName:"ol"},"Laptop or Server Installed with Influxdb and Grafana")),Object(c.b)("h2",{id:"step-1-hardware-setup"},"Step 1: Hardware Setup"),Object(c.b)("p",null,Object(c.b)("img",Object(n.a)({parentName:"p"},{src:"../assets/farm_bb.png",alt:"flow-001"}))),Object(c.b)("h2",{id:"step-2-lets-code"},"Step 2: Lets code!"),Object(c.b)("p",null,"Our device must be able to do\n1. Read Temperature\n2. Read Pressure\n3. Read Soil Moisture\n4. Send it to Dashboard\n5. Repeat after 10 minutes "),Object(c.b)("p",null,"Coding is simple with Shunya Interfaces "),Object(c.b)("h3",{id:"skeleton-structure-of-shunya-interfaces"},"Skeleton structure of Shunya Interfaces"),Object(c.b)(o.a,{defaultValue:"c",values:[{label:"C/CPP",value:"c"}],mdxType:"Tabs"},Object(c.b)(s.a,{value:"c",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-c"}),"/*Include this header file into your program */\n#include <shunyaInterfaces.h>\n\n/* Main Function */\nint main(void) {\n        /* initialize the Library*/\n        initLib();\n        return 0;\n}\n"))),Object(c.b)(s.a,{value:"py",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import shunyaInterfaces \n"))),Object(c.b)(s.a,{value:"js",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"var commingsoon = 1;\n")))),Object(c.b)("h3",{id:"api-for-reading-temperature-from-the-sensor-is"},"API for reading Temperature from the sensor is"),Object(c.b)(o.a,{defaultValue:"c",values:[{label:"C/CPP",value:"c"}],mdxType:"Tabs"},Object(c.b)(s.a,{value:"c",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-c"}),"/* Add this line to your main function \n * to read data from the sensor */\nfloat temp = getCelsius();\n\n"))),Object(c.b)(s.a,{value:"py",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import shunyaInterfaces \n"))),Object(c.b)(s.a,{value:"js",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"var commingsoon = 1;\n")))),Object(c.b)("h3",{id:"api-for-reading-pressure-from-the-sensor-is"},"API for reading Pressure from the sensor is"),Object(c.b)(o.a,{defaultValue:"c",values:[{label:"C/CPP",value:"c"}],mdxType:"Tabs"},Object(c.b)(s.a,{value:"c",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-c"}),"/* Add this line to your main function \n * to read data from the sensor */\nfloat pressure = getPa();\n\n"))),Object(c.b)(s.a,{value:"py",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import shunyaInterfaces \n"))),Object(c.b)(s.a,{value:"js",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"var commingsoon = 1;\n")))),Object(c.b)("h3",{id:"api-for-reading-soil-moisture-from-the-sensor-is"},"API for reading Soil moisture from the sensor is"),Object(c.b)(o.a,{defaultValue:"c",values:[{label:"C/CPP",value:"c"}],mdxType:"Tabs"},Object(c.b)(s.a,{value:"c",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-c"}),"/* Add this line to your main function \n * to read data from the sensor */\nint moisture = getAdc(1);\n\n"))),Object(c.b)(s.a,{value:"py",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import shunyaInterfaces \n"))),Object(c.b)(s.a,{value:"js",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"var commingsoon = 1;\n")))),Object(c.b)("h3",{id:"send-the-data-to-dashboard"},"Send the Data to Dashboard"),Object(c.b)(o.a,{defaultValue:"c",values:[{label:"C/CPP",value:"c"}],mdxType:"Tabs"},Object(c.b)(s.a,{value:"c",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-c"}),'/*Include this header file into your program */\n#include <curl/curl.h>\n\n#define DASBOARD_IP_ADDR "192.168.0.109"\n#define DB_NAME "foo_farm"\n\n/* Add these line to your main function  */\nsprintf (&buf, "measurement,host=sensor value=%.2f", temp);\nsendToDashboard(buf);\n\n'))),Object(c.b)(s.a,{value:"py",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import shunyaInterfaces \n"))),Object(c.b)(s.a,{value:"js",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"var commingsoon = 1;\n")))),Object(c.b)("div",{className:"admonition admonition-warning"},Object(c.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(c.b)("h5",{parentName:"div"},Object(c.b)("div",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(c.b)("svg",Object(n.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(c.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})))),"warning")),Object(c.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(c.b)("p",{parentName:"div"},"This recipe assumes that you already have installed Grafana and Influxdb on your\nserver or laptop and the applications are running."))),Object(c.b)("p",null,"Here is the full code."),Object(c.b)(o.a,{defaultValue:"c",values:[{label:"C/CPP",value:"c"}],mdxType:"Tabs"},Object(c.b)(s.a,{value:"c",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-c"}),'#include <stdlib.h>\n#include <stdio.h>\n\n#include <shunyaInterfaces.h>\n#include <simple-mode.h>\n#include <functions.h>\n\n#define DASBOARD_IP_ADDR "192.168.0.109"\n#define DB_NAME "foo_farm"\n\nint sendToDashboard(char *msg) {\n        CURL *curl;\n        CURLcode res;\n        char addr[1024];\n        sprintf (&addr, "http://%s:8086/write?db=%s", DASBOARD_IP_ADDR, DB_NAME);\n        curl = curl_easy_init();\n        if(curl) {\n                curl_easy_setopt(curl, CURLOPT_URL, addr);\n                curl_easy_setopt(curl, CURLOPT_POSTFIELDS, msg);\n                res = curl_easy_perform(curl);\n                if(res != CURLE_OK)\n                        fprintf(stderr, "curl_easy_perform failed: %s\\n", curl_easy_strerror(res));\n                curl_easy_cleanup(curl);\n        }\n        curl_global_cleanup();\n        return 0;\n}\n\nvoid main(void)\n{\n        char buf[36];\n\n        /*Initialize Shunya Interfaces library*/\n        initLib();\n        \n        while (1)\n        {       \n                /* Read data from the sensor */\n                float temp = getCelsius();\n                float pressure = getPa();\n                int moisture =  getAdc(1);\n                \n                char buf[128];\n                /* Send data to dashboard */\n                sprintf (&buf, "temperature,host=bme280 temp=%.2f", temp);\n                sendToDashboard(buf);\n                sprintf (&buf, "pressure,host=bme280 pressure=%.2f", pressure);\n                sendToDashboard(buf);\n                sprintf (&buf, "soil.moisture,host=pcf8591 moisture=%.2f", moisture);\n                sendToDashboard(buf);\n\n                delay(10*60*1000);\n        }\n}\n\n'))),Object(c.b)(s.a,{value:"py",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import shunyaInterfaces \n"))),Object(c.b)(s.a,{value:"js",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"var commingsoon = 1;\n")))),Object(c.b)("h2",{id:"step-3-configure-compile-and-run"},"Step 3: Configure, Compile and Run"),Object(c.b)("p",null,"To configure shunya interfaces, you need to tell shunya interfaces what all sensors are connected\nRun this command,"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{}),"$ sudo vi /etc/shunya/interfaces/config.yaml\n")),Object(c.b)("p",null,"Since we have connected 2 devices to the RPI (BME280 and PCF8591) to pin 3 & pin 5 respectively\nYou need to write these to the config file"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"\npin 3: [1.1, 6.1]\npin 4: null\npin 5: [1.2, 6.2]\n")),Object(c.b)("p",null,"Where ",Object(c.b)("inlineCode",{parentName:"p"},"1")," is the sensor id of BME280 while ",Object(c.b)("inlineCode",{parentName:"p"},"6")," is the sensor id for PCF8591."),Object(c.b)("p",null,"Save and Exit the config file. "),Object(c.b)("p",null,"To compile the code, run this command in terminal "),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"$ gcc -o iotfarm iotfarm.c -lshunyaInterfaces_user -lshunyaInterfaces_core -lcurl\n$ sudo ./iotfarm  \n")))}d.isMDXComponent=!0},121:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=r.a.createContext({}),b=function(e){var t=r.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s({},t,{},e)),a},u=function(e){var t=b(e.components);return r.a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,o=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),u=b(a),p=n,m=u["".concat(o,".").concat(p)]||u[p]||d[p]||c;return a?r.a.createElement(m,s({ref:t},i,{components:a})):r.a.createElement(m,s({ref:t},i))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,o=new Array(c);o[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var i=2;i<c;i++)o[i]=a[i];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}p.displayName="MDXCreateElement"},122:function(e,t,a){var n;!function(){"use strict";var a={}.hasOwnProperty;function r(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var c=typeof n;if("string"===c||"number"===c)e.push(n);else if(Array.isArray(n)&&n.length){var o=r.apply(null,n);o&&e.push(o)}else if("object"===c)for(var s in n)a.call(n,s)&&n[s]&&e.push(s)}}return e.join(" ")}e.exports?(r.default=r,e.exports=r):void 0===(n=function(){return r}.apply(t,[]))||(e.exports=n)}()},127:function(e,t,a){"use strict";var n=a(0),r=a.n(n),c=a(122),o=a.n(c),s=a(85),l=a.n(s);const i=37,b=39;t.a=function(e){const{block:t,children:a,defaultValue:c,values:s}=e,[u,d]=Object(n.useState)(c),p=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:o()("tabs",{"tabs--block":t})},s.map(({value:e,label:t})=>r.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":u===e,className:o()("tab-item",l.a.tabItem,{"tab-item--active":u===e}),key:e,ref:e=>p.push(e),onKeyDown:e=>((e,t,a)=>{switch(a.keyCode){case b:((e,t)=>{const a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()})(e,t);break;case i:((e,t)=>{const a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()})(e,t)}})(p,e.target,e),onFocus:()=>d(e),onClick:()=>d(e)},t))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter(e=>e.props.value===u)[0]))}},128:function(e,t,a){"use strict";var n=a(0),r=a.n(n);t.a=function(e){return r.a.createElement("div",null,e.children)}}}]);