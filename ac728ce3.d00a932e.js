/*! For license information please see ac728ce3.d00a932e.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{115:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return s})),t.d(a,"metadata",(function(){return b})),t.d(a,"rightToc",(function(){return u})),t.d(a,"default",(function(){return p}));var n=t(1),r=t(6),l=(t(0),t(127)),o=t(131),c=t(132),i=t(130),s={id:"farm-demo",title:"Farm Datalogger",sidebar_label:"Demo - Farm Datalogger"},b={id:"demos/farm-demo",title:"Farm Datalogger",description:"import Tabs from '@theme/Tabs';",source:"@site/docs/demos/farm-demo.md",permalink:"/shunyainterfaces/docs/demos/farm-demo",editUrl:"https://github.com/shunyaos/shunyainterfaces/edit/release-2.0/docs/docs/demos/farm-demo.md",sidebar_label:"Demo - Farm Datalogger",sidebar:"intro",next:{title:"Build your first IoT Application",permalink:"/shunyainterfaces/docs/get-started/first-app"}},u=[{value:"What will you need?",id:"what-will-you-need",children:[]},{value:"Steps",id:"steps",children:[]},{value:"Step 1: Install Shunya OS",id:"step-1-install-shunya-os",children:[{value:"Install Etcher",id:"install-etcher",children:[]},{value:"Flash Shunya OS",id:"flash-shunya-os",children:[]},{value:"Booting Up with Shunya OS",id:"booting-up-with-shunya-os",children:[]}]},{value:"Step 2: Lets code!",id:"step-2-lets-code",children:[{value:"Basic structure of Shunya Interfaces",id:"basic-structure-of-shunya-interfaces",children:[]},{value:"API for reading Temperature from the sensor is",id:"api-for-reading-temperature-from-the-sensor-is",children:[]},{value:"API for reading Pressure from the sensor is",id:"api-for-reading-pressure-from-the-sensor-is",children:[]},{value:"API for reading Soil moisture from the sensor is",id:"api-for-reading-soil-moisture-from-the-sensor-is",children:[]},{value:"Send the Data to Dashboard",id:"send-the-data-to-dashboard",children:[]},{value:"Summary",id:"summary",children:[]}]},{value:"Step 3: Connect Hardware",id:"step-3-connect-hardware",children:[]},{value:"Step 4: Configure, Compile and Run",id:"step-4-configure-compile-and-run",children:[{value:"Configure",id:"configure",children:[]},{value:"Compile and Run",id:"compile-and-run",children:[]}]},{value:"Step 5: Create Dashboards",id:"step-5-create-dashboards",children:[]}],d={rightToc:u};function p(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},d,t,{components:a,mdxType:"MDXLayout"}),Object(l.b)("p",null,"The demo can be used to Monitor critical parameters which decide the health of\nthe crops, Display the data on a Dashboard using Grafana."),Object(l.b)("img",{alt:"farm-demo-gif",src:Object(i.a)("img/demo.gif")}),Object(l.b)("h2",{id:"what-will-you-need"},"What will you need?"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Raspberry Pi 3/4 (or any variant of these)"),Object(l.b)("li",{parentName:"ol"},"mcro-SD card and micro-SD card Reader/Adapter."),Object(l.b)("li",{parentName:"ol"},"Temperature, Pressure sensor - BME280  "),Object(l.b)("li",{parentName:"ol"},"Soil Moisture sensor "),Object(l.b)("li",{parentName:"ol"},"Analog to Digital Converter - PCF8591 module"),Object(l.b)("li",{parentName:"ol"},"OLED Display (128x64) (optional)"),Object(l.b)("li",{parentName:"ol"},"Female to Female Du-point cables  "),Object(l.b)("li",{parentName:"ol"},"Laptop or Server Installed with Influxdb and Grafana")),Object(l.b)("h2",{id:"steps"},"Steps"),Object(l.b)("p",null,"Make your own Farm datalogger following these steps."),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Install Shunya OS "),Object(l.b)("li",{parentName:"ol"},"Write Code"),Object(l.b)("li",{parentName:"ol"},"Connect Hardware "),Object(l.b)("li",{parentName:"ol"},"Compile and Run")),Object(l.b)("h2",{id:"step-1-install-shunya-os"},"Step 1: Install Shunya OS"),Object(l.b)("p",null,"Shunya Interfaces is built on top of Shunya OS and comes pre-installed with Shunya Interfaces.\nShunya OS is an linux-based OS that runs on your hardware, it light-weight and configurable."),Object(l.b)("h3",{id:"install-etcher"},"Install Etcher"),Object(l.b)("p",null,"Etcher allows you to Flash Shunya OS on the micro-SD card."),Object(l.b)(o.a,{defaultValue:"nix",values:[{label:"Windows",value:"win"},{label:"Ubuntu",value:"nix"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"nix",mdxType:"TabItem"},Object(l.b)("h4",{id:"for-ubuntu-1604"},"For Ubuntu 16.04"),Object(l.b)("p",null,"Installing Etcher is Simple, just run few commands in the terminal"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"$ sudo apt update\n$ sudo apt install balena-etcher-electron\n"))),Object(l.b)(c.a,{value:"win",mdxType:"TabItem"},Object(l.b)("h4",{id:"for-windows-10"},"For Windows 10"),Object(l.b)("p",null,"Installing Etcher is Simple, download the executable file and Run."),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Download ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://www.balena.io/etcher/"}),"balenaEtcher")," for Windows. "),Object(l.b)("li",{parentName:"ol"},"Run balenaEtcherSetup-xxx.exe")))),Object(l.b)("h3",{id:"flash-shunya-os"},"Flash Shunya OS"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Download ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"http://releases.shunyaos.org/interfaces-images/"}),"Shunya OS")),Object(l.b)("li",{parentName:"ol"},"Right click on the downloaded zip file."),Object(l.b)("li",{parentName:"ol"},"Click Extract here."),Object(l.b)("li",{parentName:"ol"},"Open Etcher."),Object(l.b)("li",{parentName:"ol"},"Click Select Image."),Object(l.b)("li",{parentName:"ol"},"You will find the Shunya OS ",Object(l.b)("inlineCode",{parentName:"li"},".img")," file in the folder that we had extracted earlier. "),Object(l.b)("li",{parentName:"ol"},"Select ",Object(l.b)("inlineCode",{parentName:"li"},"shunya-aaaa-image-xxxx.img")," file."),Object(l.b)("li",{parentName:"ol"},"Insert SD card."),Object(l.b)("li",{parentName:"ol"},"Click on Flash. ")),Object(l.b)("img",{alt:"install-shunya-os-gif",src:Object(i.a)("img/install.gif")}),Object(l.b)("p",null,"This will load the micro-SD card with Shunya OS."),Object(l.b)("h3",{id:"booting-up-with-shunya-os"},"Booting Up with Shunya OS"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Insert the micro-SD card into the board. "),Object(l.b)("li",{parentName:"ol"},"Connect peripherals like Keyboard, Mouse and HDMI monitor. "),Object(l.b)("li",{parentName:"ol"},"Connect Power Supply. ")),Object(l.b)("p",null,"The board should boot up with Shunya OS."),Object(l.b)("h4",{id:"login-to-shunya"},"Login to Shunya"),Object(l.b)("p",null,"Login with these credentials:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Username : shunya"),Object(l.b)("li",{parentName:"ul"},"Password : shunya ")),Object(l.b)("h2",{id:"step-2-lets-code"},"Step 2: Lets code!"),Object(l.b)("p",null,"Open up your editor on Shunya OS and lets start coding."),Object(l.b)("p",null,"Our application must be able to  "),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Read Temperature "),Object(l.b)("li",{parentName:"ol"},"Read Pressure "),Object(l.b)("li",{parentName:"ol"},"Read Soil Moisture "),Object(l.b)("li",{parentName:"ol"},"Send it to Dashboard"),Object(l.b)("li",{parentName:"ol"},"Repeat 1-4 after 10 minutes ")),Object(l.b)("h3",{id:"basic-structure-of-shunya-interfaces"},"Basic structure of Shunya Interfaces"),Object(l.b)("p",null,"Use the basic structure as a reference and Paste code into the structure as per\nyour app logic."),Object(l.b)(o.a,{defaultValue:"c",values:[{label:"C/CPP",value:"c"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"c",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-c"}),"/*Include this header file into your program */\n#include <shunyaInterfaces.h>\n\n/* Main Function */\nint main(void) {\n        /* Initialize the Library*/\n        initLib();\n\n\n/*####################################\n *       PASTE CODE BELOW\n *####################################*/\n\n\n        return 0;\n}\n"))),Object(l.b)(c.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import shunyaInterfaces \n"))),Object(l.b)(c.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"var commingsoon = 1;\n")))),Object(l.b)("h3",{id:"api-for-reading-temperature-from-the-sensor-is"},"API for reading Temperature from the sensor is"),Object(l.b)(o.a,{defaultValue:"c",values:[{label:"C/CPP",value:"c"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"c",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-c"}),"/* Add this line to your main function \n * to read data from the sensor */\nfloat temp = getCelsius();\n\n"))),Object(l.b)(c.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import shunyaInterfaces \n"))),Object(l.b)(c.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"var commingsoon = 1;\n")))),Object(l.b)("h3",{id:"api-for-reading-pressure-from-the-sensor-is"},"API for reading Pressure from the sensor is"),Object(l.b)(o.a,{defaultValue:"c",values:[{label:"C/CPP",value:"c"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"c",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-c"}),"/* Add this line to your main function \n * to read data from the sensor */\nfloat pressure = getPa();\n\n"))),Object(l.b)(c.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import shunyaInterfaces \n"))),Object(l.b)(c.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"var commingsoon = 1;\n")))),Object(l.b)("h3",{id:"api-for-reading-soil-moisture-from-the-sensor-is"},"API for reading Soil moisture from the sensor is"),Object(l.b)(o.a,{defaultValue:"c",values:[{label:"C/CPP",value:"c"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"c",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-c"}),"/* Add this line to your main function \n * to read data from the sensor */\nint moisture = getAdc(1);\n\n"))),Object(l.b)(c.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import shunyaInterfaces \n"))),Object(l.b)(c.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"var commingsoon = 1;\n")))),Object(l.b)("h3",{id:"send-the-data-to-dashboard"},"Send the Data to Dashboard"),Object(l.b)(o.a,{defaultValue:"c",values:[{label:"C/CPP",value:"c"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"c",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-c"}),'/*Include this header file into your program */\n#include <curl/curl.h>\n\n#define DASBOARD_IP_ADDR "192.168.0.109"\n#define DB_NAME "foo_farm"\n\n/* Add these line to your main function  */\nsprintf (&buf, "measurement,host=sensor value=%.2f", temp);\nsendToDashboard(buf);\n\n'))),Object(l.b)(c.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import shunyaInterfaces \n"))),Object(l.b)(c.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"var commingsoon = 1;\n")))),Object(l.b)("div",{className:"admonition admonition-warning"},Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("div",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(n.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(l.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})))),"warning")),Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},"This guide assumes that you already have installed Influxdb and Grafana on your\nserver or laptop and the applications are running. For Installing Influxdb and Grafana\nCheck these guides, ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://portal.influxdata.com/downloads/"}),"InfulxDB")," & ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://grafana.com/grafana/download?platform=docker"}),"Grafana")))),Object(l.b)("h3",{id:"summary"},"Summary"),Object(l.b)("p",null,"Your Code should look something like this. "),Object(l.b)(o.a,{defaultValue:"c",values:[{label:"C/CPP",value:"c"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"c",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-c"}),'#include <stdlib.h>\n#include <stdio.h>\n\n#include <shunyaInterfaces.h>\n#include <simple-mode.h>\n#include <functions.h>\n\n#define DASBOARD_IP_ADDR "192.168.0.109"\n#define DB_NAME "foo_farm"\n\nint sendToDashboard(char *msg) {\n        CURL *curl;\n        CURLcode res;\n        char addr[1024];\n        sprintf (&addr, "http://%s:8086/write?db=%s", DASBOARD_IP_ADDR, DB_NAME);\n        curl = curl_easy_init();\n        if(curl) {\n                curl_easy_setopt(curl, CURLOPT_URL, addr);\n                curl_easy_setopt(curl, CURLOPT_POSTFIELDS, msg);\n                res = curl_easy_perform(curl);\n                if(res != CURLE_OK)\n                        fprintf(stderr, "curl_easy_perform failed: %s\\n", curl_easy_strerror(res));\n                curl_easy_cleanup(curl);\n        }\n        curl_global_cleanup();\n        return 0;\n}\n\nvoid main(void)\n{\n        char buf[36];\n\n        /*Initialize Shunya Interfaces library*/\n        initLib();\n        \n        while (1)\n        {       \n                /* Read data from the sensor */\n                float temp = getCelsius();\n                float pressure = getPa();\n                int moisture =  getAdc(1);\n                \n                char buf[128];\n                /* Send data to dashboard */\n                sprintf (&buf, "temperature,host=bme280 temp=%.2f", temp);\n                sendToDashboard(buf);\n                sprintf (&buf, "pressure,host=bme280 pressure=%.2f", pressure);\n                sendToDashboard(buf);\n                sprintf (&buf, "soil.moisture,host=pcf8591 moisture=%.2f", moisture);\n                sendToDashboard(buf);\n\n                delay(10*60*1000);\n        }\n}\n\n'))),Object(l.b)(c.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import shunyaInterfaces \n"))),Object(l.b)(c.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"var commingsoon = 1;\n")))),Object(l.b)("h2",{id:"step-3-connect-hardware"},"Step 3: Connect Hardware"),Object(l.b)("p",null,"Now its time to put all the hardware together, use the diagram below to connect\nhardware."),Object(l.b)("img",{alt:"Oops!, No Image to display.",src:Object(i.a)("img/farm_bb.png")}),Object(l.b)("h2",{id:"step-4-configure-compile-and-run"},"Step 4: Configure, Compile and Run"),Object(l.b)("h3",{id:"configure"},"Configure"),Object(l.b)("p",null,"Tell Shunya Interfaces your hardware connections."),Object(l.b)("p",null,"You can configure by running command."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{}),"$ sudo vi /etc/shunya/interfaces/config.yaml\n")),Object(l.b)("h4",{id:"sensor-ids-and-connection-ids"},"Sensor ID's and Connection ID's"),Object(l.b)("p",null,"You tell all your Hardware connections to Shunya Interfaces via Sensor ID's and\nConnection ID's. "),Object(l.b)("p",null,"Each Sensor is given a special ID which the Shunya Interfaces library recognizes.\nAnd each Hardware pin on the Sensor is given a Connection ID."),Object(l.b)("p",null,"So when we write ",Object(l.b)("inlineCode",{parentName:"p"},"pin 1: 1.1")," Shunya Interfaces understands it as ",Object(l.b)("inlineCode",{parentName:"p"},"<Sensor 1>.<Sensor pin 1>")," connected to ",Object(l.b)("inlineCode",{parentName:"p"},"pin 1")," of Raspberry Pi.      "),Object(l.b)("p",null,"In our case, we have connected 2 devices to the  Raspberry Pi (BME280 and PCF8591) to pin 3 (SDA) & pin 5 (SCL) respectively."),Object(l.b)("p",null,"Our Config file will look like."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"\npin 3: [1.1, 6.1]\npin 4: null\npin 5: [1.2, 6.2]\n")),Object(l.b)("p",null,"Make sure to save your changes to the config file."),Object(l.b)("h3",{id:"compile-and-run"},"Compile and Run"),Object(l.b)("p",null,"Compiling code is same as compiling C program. Just link the libraries."),Object(l.b)("div",{className:"admonition admonition-tip"},Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("div",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(n.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(l.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},"While running the code use ",Object(l.b)("inlineCode",{parentName:"p"},"sudo")," to give appropriate permissions to your app."))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"$ gcc -o iotfarm iotfarm.c -lshunyaInterfaces_user -lshunyaInterfaces_core -lcurl\n$ sudo ./iotfarm  \n")),Object(l.b)("p",null,"Now your IoT device is ready and publishing data to the server."),Object(l.b)("h2",{id:"step-5-create-dashboards"},"Step 5: Create Dashboards"),Object(l.b)("p",null,"Now that the IoT app is up and running, configure Grafana to create Beautiful\nDashboards for you."),Object(l.b)("p",null,"Grafana provides amazing guides for users to configure Grafana, take a look at them."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://grafana.com/docs/grafana/latest/features/datasources/influxdb/"}),"Guide")," to help you connect Influxdb to grafana."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://grafana.com/docs/grafana/latest/guides/getting_started/#create-a-dashboard"}),"Guide")," to help you create Dashboards.")),Object(l.b)("h1",{id:"want-to-build-your-own-application"},"Want to Build your own Application?"),Object(l.b)("p",null,"Click on the Next button, below."))}p.isMDXComponent=!0},127:function(e,a,t){"use strict";t.d(a,"a",(function(){return u})),t.d(a,"b",(function(){return m}));var n=t(0),r=t.n(n);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=r.a.createContext({}),b=function(e){var a=r.a.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):c({},a,{},e)),t},u=function(e){var a=b(e.components);return r.a.createElement(s.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},p=Object(n.forwardRef)((function(e,a){var t=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=b(t),p=n,m=u["".concat(o,".").concat(p)]||u[p]||d[p]||l;return t?r.a.createElement(m,c({ref:a},s,{components:t})):r.a.createElement(m,c({ref:a},s))}));function m(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var l=t.length,o=new Array(l);o[0]=p;var c={};for(var i in a)hasOwnProperty.call(a,i)&&(c[i]=a[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var s=2;s<l;s++)o[s]=t[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},128:function(e,a,t){"use strict";var n=t(0),r=t(32);a.a=function(){return Object(n.useContext)(r.a)}},129:function(e,a,t){var n;!function(){"use strict";var t={}.hasOwnProperty;function r(){for(var e=[],a=0;a<arguments.length;a++){var n=arguments[a];if(n){var l=typeof n;if("string"===l||"number"===l)e.push(n);else if(Array.isArray(n)&&n.length){var o=r.apply(null,n);o&&e.push(o)}else if("object"===l)for(var c in n)t.call(n,c)&&n[c]&&e.push(c)}}return e.join(" ")}e.exports?(r.default=r,e.exports=r):void 0===(n=function(){return r}.apply(a,[]))||(e.exports=n)}()},130:function(e,a,t){"use strict";t.d(a,"a",(function(){return r}));var n=t(128);function r(e){const{siteConfig:a}=Object(n.a)(),{baseUrl:t="/"}=a||{};if(!e)return e;return/^(https?:|\/\/)/.test(e)?e:e.startsWith("/")?t+e.slice(1):t+e}},131:function(e,a,t){"use strict";var n=t(0),r=t.n(n),l=t(129),o=t.n(l),c=t(85),i=t.n(c);const s=37,b=39;a.a=function(e){const{block:a,children:t,defaultValue:l,values:c}=e,[u,d]=Object(n.useState)(l),p=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:o()("tabs",{"tabs--block":a})},c.map(({value:e,label:a})=>r.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":u===e,className:o()("tab-item",i.a.tabItem,{"tab-item--active":u===e}),key:e,ref:e=>p.push(e),onKeyDown:e=>((e,a,t)=>{switch(t.keyCode){case b:((e,a)=>{const t=e.indexOf(a)+1;e[t]?e[t].focus():e[0].focus()})(e,a);break;case s:((e,a)=>{const t=e.indexOf(a)-1;e[t]?e[t].focus():e[e.length-1].focus()})(e,a)}})(p,e.target,e),onFocus:()=>d(e),onClick:()=>d(e)},a))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(t).filter(e=>e.props.value===u)[0]))}},132:function(e,a,t){"use strict";var n=t(0),r=t.n(n);a.a=function(e){return r.a.createElement("div",null,e.children)}}}]);